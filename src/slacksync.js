/* eslint no-console: 0 */

import {getUserBio} from './lib/amaint'
import {getMaillistMembers} from './lib/maillist'
import * as slack from './lib/slack'
import {IGNORE_USERS} from './lib/constants'

export default async function slacksync(opts) {
  const allSlackUsers = await slack.getUserList(opts.slack_token)
  const activeSlackUsers = allSlackUsers.members.filter(u => {
    return !u.deleted && 
           !u.is_bot && 
           !IGNORE_USERS.includes(u.id) && 
           !u.is_restricted && 
           !u.is_ultra_restricted
  })
  const activeSlackUsersEmails = activeSlackUsers.map(u => u.profile.email)
  
  const deletedSlackUsers = allSlackUsers.members.filter(u => u.deleted && !u.is_bot)
  
  let maillistMembers = await getMaillistMembers(opts.maillist, opts.maillist_token)
  maillistMembers = maillistMembers.filter(u => u.autoGenerated)
  const maillistMembersAddresses = maillistMembers.map(u => `${u.canonicalAddress}@sfu.ca`)

  const usersToRemoveFromSlack = activeSlackUsers.filter(u => !maillistMembersAddresses.includes(u.profile.email))
  console.log('users to remove from slack')
  console.log(usersToRemoveFromSlack.map(u => {return {username: u.name, email: u.profile.email}}))
  
  const usersToReactivate = deletedSlackUsers.filter(u => maillistMembersAddresses.includes(u.profile.email))
  console.log('users to reactivate')
  console.log(usersToReactivate.map(u => u.profile.email))
  
  const usersToCreate = maillistMembers.filter(u => !activeSlackUsersEmails.includes(`${u.canonicalAddress}@sfu.ca`))
  console.log('users to create')
  // console.log(usersToCreate)
  
  let userBios = []
  for (let promise of usersToCreate.map(u => getUserBio(u.canonicalAddress, opts.art_token))) {
    userBios.push(await promise)
  }
  
  const newSlackUsers = userBios.map(u => {
    return {
      userName: u.username,
      name: {
        familyName: u.lastname,
        givenName: u.commonname || u.firstnames
      },
      emails: [{
        value: `${u.username}@sfu.ca`,
        primary: true
      }]
    }
  })
  console.log(newSlackUsers)
}

process.on('unhandledRejection', function(reason, p){
    console.log("Possibly Unhandled Rejection at: Promise ", p, " reason: ", reason)
    // application specific logging here
})
